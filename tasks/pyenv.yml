---
- name: Install essential Python build dependencies (macOS).
  homebrew:
    name: "{{ python_build_dependencies_mac_os }}"
    state: present
  when: ansible_os_family == "Darwin"

- name: Install essential Python build dependencies (elementary OS).
  become: true
  apt:
    pkg: "{{ python_build_dependencies_elementary_os }}"
    state: present
  when: ansible_os_family == "elementary OS"

- name: Ensure pyenv is installed.
  command: "pyenv --version"
  register: pyenv_version_installed
  changed_when: false
  ignore_errors: true

- name: Check that .pyenv directory does not exists before installation.
  file:
    path: $HOME/.pyenv
    state: absent
  when: pyenv_version_installed.rc != 0

- name: Get pyenv installer.
  get_url:
    url: https://pyenv.run
    dest: $HOME/pyenv-installer
    mode: u+rx
  when: pyenv_version_installed.rc != 0

- name: Install pyenv.
  command: $HOME/pyenv-installer
  when: pyenv_version_installed.rc != 0

- name: Remove pyenv installer.
  file:
    path: $HOME/pyenv-installer
    state: absent
  when: pyenv_version_installed.rc != 0

- name: Check installed versions of Python.
  command: "$HOME/.pyenv/bin/pyenv versions --bare"
  register: python_installed_versions
  changed_when: python_version not in python_installed_versions.stdout_lines

- name: Install Python.
  command: "$HOME/.pyenv/bin/pyenv install --force {{ python_version }}"
  when: python_version not in python_installed_versions.stdout_lines

- name: Check Python global verion.
  command: "$HOME/.pyenv/bin/pyenv global"
  register: python_installed_global_version
  changed_when: python_installed_global_version != python_version

- name: Set Python global version.
  command: "$HOME/.pyenv/bin/pyenv global {{ python_version }}"
  when: python_installed_global_version != python_version
